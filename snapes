#!/bin/bash
# revision 1
# by Dan Goldberg dan@madjic.net
# Rolling Snapshots of Elasticsearch
# Requires AWS role configuration if using S3 and EC2

# Makes a rolling set of snapshots

#Initialize Variables
# Set the number of snapshots to keep
ROLL=2
REPO=scaryhair12
#set a name for the new snapshot
NAME=`date +%F-%R`
#Get a list of current snapshots
SNAPS=`curl -s -XGET "http://localhost:9200/_snapshot/scaryhair12/_all?pretty=true" | jq '.snapshots[]|{snapshot}|.snapshot'| sed -e 's/^"//' -e 's/"$//'`
#Count existing snapshots
COUNT=`for IT in $SNAPS; do echo $IT;done | wc -l`
if [ $1 == FULLSTATUS ]; then
curl -s -XGET "http://localhost:9200/_snapshot/scaryhair12/_all?pretty=true" | jq '.snapshots[]|.snapshot + ", "  + .state,  .indices'| sed -e 's/^"//' -e 's/"$//'
exit
fi
if [ $1 == STATUS ]; then
echo "$SNAPS"
exit
fi
if [ $1 == HELP ]; then
echo use FULLSTATUS for a complete snap shot status, of STATUS for a list of snapshots
exit
fi
#declare functions:

# delete a snapshot
function DELETESNAP {
    #for IT in $SNAPS; do curl -s -XDELETE "http://localhost:9200/_snapshot/$REPO/$IT";done
    curl -s -XDELETE "http://localhost:9200/_snapshot/$REPO/$IT"
}

# create a snapshot
function CREATESNAP {
    curl -XPUT "http://localhost:9200/_snapshot/$REPO/snap_$NAME"
}

# get snapshot statuses
function STATUSSNAP {
    echo $SNAPS
	exit
}

function FULLSTATUSSNAP {
FULLSNAPS=`curl -s -XGET "http://localhost:9200/_snapshot/scaryhair12/_all?pretty=true" | jq '.snapshots[]|.snapshot + ", "  + .state,  .indices'| sed -e 's/^"//' -e 's/"$//'`
echo $FULLSNAPS
exit
}
#end function declarations

CREATESNAP
if [ "$COUNT" -gt "$ROLL"  ]; then
echo && echo $COUNT
IFS=' ' read -a snaplist <<< $SNAPS
IT=${snaplist[0]}
echo Deleting Snapshot: $IT
(sleep 30; DELETESNAP)
fi
